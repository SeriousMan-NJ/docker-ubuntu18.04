FROM ubuntu:18.04
LABEL author="ywshin@postech.ac.kr"

RUN set -e
RUN set -u

# Install libraries for building c++ core on ubuntu
RUN \
  apt-get -y update --fix-missing && \
  apt-get -y upgrade && \
  apt-get install -y software-properties-common && \
  apt-get install -y --no-install-recommends \
    git make libgtest-dev cmake wget unzip libtinfo-dev libz-dev libcurl4-openssl-dev libopenblas-dev g++ sudo zsh python-pip python3-pip python-dev python3-dev python3-numpy python-numpy git vim curl wget build-essential tmux htop unzip locales ninja-build python3-setuptools python-setuptools build-essential ocl-icd-libopencl1 ninja-build ocl-icd-libopencl1 ocl-icd-dev ocl-icd-opencl-dev libhwloc-dev zlib1g zlib1g-dev clinfo dialog apt-utils pkg-config ssh
RUN apt-get install -y net-tools

# Set environment variables
ENV HOME /root

# Define working directory
WORKDIR /root

# zsh settings
RUN chsh -s /usr/bin/zsh root
RUN curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
RUN git clone https://github.com/zsh-users/zsh-autosuggestions .oh-my-zsh/custom/plugins/zsh-autosuggestions
RUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git .oh-my-zsh/custom/plugins/zsh-syntax-highlighting
COPY root/.zshrc .zshrc

# git settings
COPY root/.gitconfig .gitconfig

# vim settings
RUN curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
COPY root/.vimrc .vimrc

# ROCm
RUN apt-get -y update
RUN apt-get -y dist-upgrade
RUN apt-get -y install libnuma-dev
RUN wget -q -O - http://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
RUN echo 'deb [arch=amd64] http://repo.radeon.com/rocm/apt/debian/ xenial main' | sudo tee /etc/apt/sources.list.d/rocm.list
RUN apt-get -y update
RUN apt-get -y install rocm-dev

RUN cd /root ; git clone https://github.com/RadeonOpenCompute/clang-ocl.git ; cd clang-ocl ; mkdir build ; cd build ; cmake .. ; cmake --build . --target install

RUN cd /root ; git clone -b rocm-3.7.0 https://github.com/RadeonOpenCompute/llvm-project.git ; cd llvm-project ; mkdir -p build && cd build ; cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/opt/rocm/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=1 -DLLVM_TARGETS_TO_BUILD="AMDGPU;X86" -DLLVM_ENABLE_PROJECTS="clang;lld;compiler-rt" ../llvm ; ninja ; ninja install

RUN cd /root ; export PATH=/opt/rocm/llvm/bin:$PATH ; git clone -b rocm-3.7.0 https://github.com/RadeonOpenCompute/ROCm-Device-Libs.git ; cd ROCm-Device-Libs ; mkdir -p build && cd build ; CC=clang CXX=clang++ cmake -G Ninja -DLLVM_DIR=/opt/rocm/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_WERROR=1 -DLLVM_ENABLE_ASSERTIONS=1 -DCMAKE_INSTALL_PREFIX=/opt/rocm .. ; ninja ; ninja install

RUN apt-get -y install rocm-opencl-dev

# export PATH=$PATH:/opt/rocm/bin:/opt/rocm/profiler/bin:/opt/rocm/opencl/bin
# export PATH=/opt/rocm/llvm/bin:$PATH


# Create user
# RUN \
#   adduser --gecos '' --disabled-password --uid 1000 ywshin && \
#   usermod -aG sudo ywshin && \
#   echo "ywshin ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Cleanup
# RUN rm -rf /var/lib/apt/lists/*

CMD ["/bin/bash"]
